@model ModellsUp.Models.pictureExifMetaData

@{
    ViewBag.Title = "Home Page";
}

@using (Html.BeginForm("FileUpload", "Home", FormMethod.Post,
                                new { enctype = "multipart/form-data" }))
{
    <label for="pictureToUpload">Upload Image:</label>
    <input type="file" name="pictureToUpload" id="file" style="width: 100%;" />
    <input type="submit" value="Upload" class="submit" />
}
    <script>
        function imageZoom(imgID, resultID) {

            var img, lens, result, cx, cy;
            img = document.getElementById(imgID);
            result = document.getElementById(resultID);

            /* Create lens: */
            lens = document.createElement("DIV");
            lens.setAttribute("class", "img-zoom-lens");

            /* Insert lens: */
            img.parentElement.insertBefore(lens, img);

            /* Calculate the ratio between result DIV and lens: */
            cx = result.offsetWidth / lens.offsetWidth;
            cy = result.offsetHeight / lens.offsetHeight;

            /* Set background properties for the result DIV */
            result.style.backgroundImage = "url('" + img.src + "')";
            result.style.backgroundSize = (img.width * cx) + "px " + (img.height * cy) + "px";

            /* Execute a function when someone moves the cursor over the image, or the lens: */
            lens.addEventListener("mousemove", moveLens);
            img.addEventListener("mousemove", moveLens);

            /* And also for touch screens: */
            lens.addEventListener("touchmove", moveLens);
            img.addEventListener("touchmove", moveLens);
            function moveLens(e) {
                var pos, x, y;

                /* Prevent any other actions that may occur when moving over the image */
                e.preventDefault();

                /* Get the cursor's x and y positions: */
                pos = getCursorPos(e);

                /* Calculate the position of the lens: */
                x = pos.x - (lens.offsetWidth / 2);
                y = pos.y - (lens.offsetHeight / 2);

                /* Prevent the lens from being positioned outside the image: */
                if (x > img.width - lens.offsetWidth) { x = img.width - lens.offsetWidth; }
                if (x < 0) { x = 0; }
                if (y > img.height - lens.offsetHeight) { y = img.height - lens.offsetHeight; }
                if (y < 0) { y = 0; }

                /* Set the position of the lens: */
                lens.style.left = x + "px";
                lens.style.top = y + "px";

                /* Display what the lens "sees": */
                result.style.backgroundPosition = "-" + (x * cx) + "px -" + (y * cy) + "px";
            }

            function getCursorPos(e) {

                var a, x = 0, y = 0;
                e = e || window.event;

                /* Get the x and y positions of the image: */
                a = img.getBoundingClientRect();

                /* Calculate the cursor's x and y coordinates, relative to the image: */
                x = e.pageX - a.left;
                y = e.pageY - a.top;

                /* Consider any page scrolling: */
                x = x - window.pageXOffset;
                y = y - window.pageYOffset;

                return { x: x, y: y };
            }
        }

    </script>
<link href="~/Content/Site.css" rel="stylesheet" />

@if (Model != null)
{
    @*Display picture exifs :*@
    <div class="border border-primary mx-auto text-left exifsData" id="exifsInfos">
        <ul>

            @*Display camera make :*@
            <li><span id="picCameraMake">@Model.pictureCameraMake</span></li>

            @*Display camera model :*@
            <li><span id="picCameraModel">@Model.pictureCameraModel</span></li>

            @*Display picture date time :*@
            <li><span id="pictureOriginalDateTime">@Model.pictureOriginalDateTime</span></li>

            @*Display picture exposure time :*@
            <li><span id="pictureExposureTime">@Model.pictureExposureTime</span></li>

            @*Display picture speed ratings :*@
            <li><span id="pictureIsoSpeedRatings">@Model.pictureIsoSpeedRatings</span></li>

            @*Display picture focal length :*@
            <li><span id="pictureFocalLength">@Model.pictureFocalLength</span></li>

            @*Display picture flash :*@
            <li><span id="pictureFlash">@Model.pictureFlash</span></li>

            @*Display picture height :*@
            @*<li><span id="pictureHeight">@Model.pictureHeight</span></li>*@

            @*Display picture dims :*@
            <li><span id="pictureWidth">@Model.pictureDimensions</span></li>
        </ul>
    </div>
}

    <div class="test img-zoom-container">
        <img src="~/Content/Images/forest.jpg" style="height:300px;width:250px" id="myimage"/>
        <div id="myresult" class="img-zoom-result"></div>
    </div> 


<script>
    // Initiate zoom effect:
    imageZoom("myimage", "myresult");
</script>